import Head from 'next/head'
import React, { useEffect } from 'react'
import { trpc } from 'utils/trpc'
import styles from '../../../styles/Home.module.css'
import 'bootstrap/dist/css/bootstrap.css';
import Nav from 'react-bootstrap/Nav';
import Navbar from 'react-bootstrap/Navbar';
import NavDropdown from 'react-bootstrap/NavDropdown';
import Table from 'react-bootstrap/Table'
import { useState } from 'react';

export default function Prodotto() {
  const [fornitore, setFornitore] = useState(0);
  const [saveStateButton, setStateSaveButton] = useState('true');
  const [cleanStateButton, setCleanSaveButton] = useState('true');
  const prodTrpc = trpc.useQuery(['prodotto.list', { fornitore: Number(fornitore) }])
  // const fornitoreTrpc = trpc.useQuery(['fornitore.list'])
  useEffect(() => {
    // typeof document !== undefined ? require('bootstrap/dist/js/bootstrap') : null
  }, [])

  if (!prodTrpc.isSuccess) return (
    <div>Not ready</div>
  )

  return (
    <div className="container">
      <Head>
        <title>Prodotti</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>Prodotti</h1>
        <Navbar bg="light" style={{ maxHeight: '100px' }} navbarScroll>
          <Navbar.Collapse id="navbarScroll" >
            <Nav className="me-auto"
            activeKey={fornitore}
              onSelect={(selectedKey) => setFornitore(Number(selectedKey))}>
              <NavDropdown title="Scegli fornitore" id="navbarScrollingDropdown">
              {/* {fornitoreTrpc.data.map(fornitore => (
                <NavDropdown.Item href={fornitore.id}>{fornitore.nome}</NavDropdown.Item>
            ))} */}
                <NavDropdown.Item eventKey='1'>FornitoreA</NavDropdown.Item>
                <NavDropdown.Item eventKey='2'>FornitoreB</NavDropdown.Item>
              </NavDropdown>
            </Nav>
          </Navbar.Collapse>
        </Navbar>
        <Table striped bordered hover>
          <thead>
            <tr>
              <th>Id prodotto</th>
              <th>Nome prodotto</th>
              <th>Prezzo</th>
            </tr>
          </thead>
          <tbody>
          
          {prodTrpc.data.map(prod => (
            <tr>
              <td >{prod.id} </td>
              <td>{prod.nome}</td>
              <td> {prod.prezzo}</td>
              <td><a href="/prodotto/edit" class="btn btn-primary btn-lg active" role="button" aria-pressed="true">Edit</a></td>
              <td><a href="/prodotto/delete" class="btn btn-primary btn-lg active" role="button" aria-pressed="true">Delete</a></td>
            </tr>
            ))}
            <tr>
              <td><a name="saveButton" href="/prodotto/edit" class="btn btn-primary btn-lg active" role="button" aria-pressed="true" hidden={saveStateButton}>Save</a></td>
              <td><a name="cleanButton" href="/prodotto/edit" class="btn btn-primary btn-lg active" role="button" aria-pressed="true" hidden={cleanStateButton}>Clean</a></td>
            </tr>
          </tbody>
        </Table>
      </main>
    </div>
  )
}

