// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique @db.VarChar(255)
  password String @db.VarChar(255)
  role     String @default("user") @db.VarChar(50)

  preventivi Preventivo[]
}

model Fornitore {
  id   Int    @id @default(autoincrement())
  nome String @unique @db.VarChar(255)

  Listino Listino[]
}

model Listino {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @updatedAt()
  fornitoreId Int
  nome        String   @unique @db.VarChar(255)

  fornitore         Fornitore           @relation(fields: [fornitoreId], references: [id])
  Prodotto          Prodotto[]
  Personalizzazione Personalizzazione[]
  Preventivo        Preventivo[]

  @@index([fornitoreId])
}

model Prodotto {
  id        Int     @id @default(autoincrement())
  nome      String  @db.VarChar(255)
  prezzo    Decimal @db.Decimal(10, 2)
  listinoId Int

  listino    Listino         @relation(fields: [listinoId], references: [id], onDelete: Cascade)
  quotazioni PreventivoRow[]

  @@unique([nome, listinoId])
  @@index([listinoId])
}

model Personalizzazione {
  id        Int     @id @default(autoincrement())
  nome      String  @db.VarChar(255)
  prezzo    Decimal @db.Decimal(10, 2)
  listinoId Int

  quotazioni PreventivoRow[]
  listino    Listino         @relation(fields: [listinoId], references: [id], onDelete: Cascade)

  @@unique([nome, listinoId])
  @@index([listinoId])
}

model Preventivo {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  nome      String   @db.VarChar(255)
  scuola    String   @db.VarChar(100)
  listinoId Int
  userId    Int
  editedAt  DateTime @default(now())
  locked    Boolean  @default(false)

  rows         PreventivoRow[]
  listino      Listino            @relation(fields: [listinoId], references: [id])
  lastEditedBy User               @relation(fields: [userId], references: [id])
  Ordine       Ordine[]
  options      PreventivoOption[]

  @@index([listinoId])
  @@index([userId])
  @@fulltext([nome, scuola])
}

model PreventivoRow {
  id                  Int     @id @default(autoincrement())
  provvigioneSC       Decimal @db.Decimal(10, 2)
  provvigioneRappre   Decimal @db.Decimal(10, 2)
  provvigioneComm     Decimal @db.Decimal(10, 2)
  preventivoId        Int
  prodottoId          Int
  personalizzazioneId Int

  preventivo        Preventivo        @relation(fields: [preventivoId], references: [id], onDelete: Cascade)
  prodotto          Prodotto          @relation(fields: [prodottoId], references: [id], onDelete: Cascade)
  personalizzazione Personalizzazione @relation(fields: [personalizzazioneId], references: [id], onDelete: Cascade)
  OrdineRow         OrdineRow[]

  @@unique([preventivoId, prodottoId, personalizzazioneId])
  @@index([preventivoId])
  @@index([prodottoId])
  @@index([personalizzazioneId])
}

model PreventivoOption {
  preventivo Preventivo           @relation(fields: [prevId], references: [id], onDelete: Cascade)
  option     PreventivoDefaultOpt @relation(fields: [prevDefaultOptId], references: [id])
  selected   Boolean

  prevId           Int
  prevDefaultOptId Int

  @@id([prevId, prevDefaultOptId])
  @@index([prevId])
  @@index([prevDefaultOptId])
}

model PreventivoDefaultOpt {
  id               Int                @id @default(autoincrement())
  short            String             @db.VarChar(50)
  nome             String             @db.VarChar(255)
  selected         Boolean            @default(false)
  PreventivoOption PreventivoOption[]
}

model Ordine {
  id           Int     @id @default(autoincrement())
  preventivoId Int
  totSC        Decimal @default(0) @db.Decimal(10, 2)
  totRappre    Decimal @default(0) @db.Decimal(10, 2)
  totComm      Decimal @default(0) @db.Decimal(10, 2)

  preventivo Preventivo  @relation(fields: [preventivoId], references: [id])
  OrdineRow  OrdineRow[]

  @@unique([preventivoId])
}

model OrdineRow {
  id              Int @id @default(autoincrement())
  quantity        Int @default(0)
  ordineId        Int
  preventivoRowId Int

  ordine  Ordine        @relation(fields: [ordineId], references: [id], onDelete: Cascade)
  prevRow PreventivoRow @relation(fields: [preventivoRowId], references: [id])

  @@unique([preventivoRowId])
  @@index([ordineId])
}
